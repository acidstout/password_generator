/*
	Password Generator

	Supports generating passwords of unlimited length and selectable complexity.
	Background image credits go to Samuel Scrimshaw (instagram.com/samscrim)

	@author nrekow
	
	
*/

/* Some global definitions which make it look nice. */
html, body, * {
	font-family: 'Helvetica', 'Verdana', sans-serif;
	font-size: 9pt;
}

html, body {
	margin: 0 auto;
}

body {
	background-color: #555;
	user-select: none;
}

input[type=checkbox], label {
	cursor: pointer;
}

input[type=checkbox] {
	position: relative;
	top: 2px;
}

input[type=checkbox]:active {
	position:relative;
	left: 1px;
	top: 3px;
}

input[type=text], textarea, button {
	border-radius: 4px;
	border: 1px solid #ccc;
	user-select: all;
}

/* Make buttons look nice */
button {
	background-color:#f7f7f7;
	border:1px solid #dadada;
	box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05), 0 -15px 10px -12px rgba(0, 0, 0, 0.05) inset;
	cursor: pointer;
	margin-top:4px;
	padding: 4px 8px;
	text-shadow: 1px 1px 0 #ccc;
}

button:hover {
	background-color: #fff;
}

button:active {
	background-color: #ffd600;
	box-shadow: 1px 1px 1px #ddd;
	position:relative;
	left: 1px;
	top: 1px;
}

button[disabled], button:active[disabled] {
	background-color:#f7f7f7;
	box-shadow: 0 0 0 transparent;
	color: #ccc;
	cursor: wait;
}

label {
	display: inline;
	text-shadow: 1px 1px 0 #ccc;
}


/* Useful generic classes*/
.alignLeft {
	text-align: left;
}
.alignRight {
	text-align: right;
}
.hidden {
	display: none;
}

/* Theses DIVs are used to properly position the length form field and the strength-meter. */
#left, #right {
	width: 50%;
}

#left {
	float: left;
}

#right {
	float: right;
	position :relative;
	left: 4px;
	top: 2px;
}

/* Input form field for our password length. Unfortunately this is displayed differently in Firefox and Chromium based browser. */
#length {
	background-color: #fff;
	border: 1px solid #ccc;
	border-radius: 4px;
	padding: 1px 0 1px 2px;
	text-align: right;
	width: 48px;
}

/* Our strength-meter */
#strength-meter {
	border: 1px solid #ccc;
	border-radius: 4px;
	display: inline-block;
	height: 6px;
	padding: 1px 2px;
	position: relative;
	top: 1px;
	left: 7px;
	width: 186px;
}

/* Start position and height of all bars of the strength-meter */
.strength {
	height: 6px;
	position: absolute;
	top: 1px;
	left: 2px;
}


/* Weak bar is red and occupies just 33% width of the strength-meter */
#strength-weak {
	background-color: #f00;
	border-bottom-left-radius: 4px;
	border-top-left-radius: 4px;
	width: 33%;
}


/* Fair bar is yellow and occupies 66% width of the strength-meter */
#strength-fair {
	background-color: #ff0;
	border-bottom-left-radius: 4px;
	border-top-left-radius: 4px;
	width: 66%;
}


/* Good bar is green and occupies all width of the strength-bar. Mind the missing 1%, which leaves some space at the right end.
   Otherwise it would touch the surrounding border (not good). */
#strength-good {
	background-color: #0f0;
	border-radius: 4px;
	width: 99%;
}


/* Width of the input form field where custom characters can be entered */
#custom {
	padding: 1px 2px;
	width: 77%;
}


/* A list gives us more flexibility than a table, so we put all options in a list, which is formatted as a table. */
ul.inlinelist {
	display: table;
	padding: 0;
	width: 100%;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
}

/* Each entry in our list should behave like a table cell */
ul.inlinelist li {
	display: table-cell;
}

#box {
	position: fixed;
	height: 100%;
	width: 100%;
}

.bg-img {
	background: url('../img/bg/samuel-scrimshaw-114346.jpg') #555 no-repeat center / cover;
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
}


/* This contains the title bar and the actual box */
#outer_box {
	position: absolute;
	display: none;
	/*
	   The common margin or transform tricks do NOT work with JQueryUI's draggable elements.
	   So, instead of CSS positioning we need to use JavaScript.
	*/
	
	text-align: left;
	height: auto;
	width: 560px;
	
	/* Put this behind the #title, because the #title needs to be behind #inner_box in order to have no overlapping shadows. */
	z-index:-2;
}

#title, #inner_box {
	box-shadow: 4px 4px 10px #555 /* #ddd */;
}

/* The orange title bar of our box */
#title {
	border: 2px solid #ffd600;
	border-top-left-radius: 4px;
	border-top-right-radius: 4px;
	background: url(../img/key.svg) no-repeat #ffe300 2px 0px / 20px;
	color:#444;
	cursor: pointer;
	font-family: "Tahoma", sans-serif;
	font-weight:bold;
	padding: 2px 4px 2px 24px;
	position:relative;
	top:0;
	left:0;
	text-shadow: 1px 1px 2px #ffb600;
	width: 130px;
	
	/* Put this behind #inner_box to have no overlapping shadows. */
	z-index: -1;
}

/* Our box where all the stuff happens */
#inner_box {
	background-color: #eee;
	border: 1px solid #ccc;
	border-top-right-radius: 4px;
	border-bottom-left-radius: 4px;
	border-bottom-right-radius: 4px;
	padding: 8px 12px 16px 8px;
}

/* This is to position the options properly to the #result form field */
#options {
	position:relative;
	left: 4px;
	top: 8px;
}

/* Input form field which will hold the generated password */
#result {
	font-size: 12pt;
	height: 32px;
	padding: 4px;
	text-align: center;
	width: calc(100% - 6px);
}


/*
   This makes checkboxes look nice. It's a little tricky, though.
   Basically we hide the checkbox and misuse its label to draw a checkbox with a togglable checkmark.
*/
.regular-checkbox {
	display: none;
}

.regular-checkbox + label {
	background-color: #fafafa;
	border: 1px solid #cacece;
	border-radius: 3px;
	box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0 -15px 10px -12px rgba(0,0,0,0.05);
	display: inline-block;
	padding: 6px;
	position: relative;
	top:2px;
}

.regular-checkbox + label:active, .regular-checkbox:checked + label:active {
	box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0 1px 3px rgba(0,0,0,0.1);
}

.regular-checkbox:checked + label {
	background-color: #e9ecee;
	border: 1px solid #adb8c0;
	box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0 -15px 10px -12px rgba(0,0,0,0.05), inset 15px 10px -12px rgba(255,255,255,0.1);
	color: #99a1a7;
}

.regular-checkbox:checked + label:after {
	color: #99a1a7;
	content: '\2714';
	font-size: 14px;
	position: absolute;
	top: -3px;
	left: 0;
}


/* Add some responsiveness */
@media (max-width: 595px) { 
	#outer_box {
		left: 0;
		margin-left: 0;
		width: auto;
	}

	#strength-meter {
		left: 0;
		min-width: 50%;
		width: auto;
	}
	
	ul.inlinelist, ul.inlinelist li {
		display: block;
	}
	
	#result {
		font-size: 9pt;
	}
}
